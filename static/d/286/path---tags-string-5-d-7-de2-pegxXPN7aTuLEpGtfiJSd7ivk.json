{"data":{"allMarkdownRemark":{"totalCount":3,"edges":[{"node":{"fields":{"slug":"/algorithm/big-number-multiply","date":"2019-10-22T04:00:00.000Z"},"excerpt":"问题适用于1000位以内数的乘法思路注意两点：数字是通过字符串传过来的，字符串的低位反而是数字的高位，所以我们要从数字的低位开始计算的话，必须反转字符串（当然结果也要反转）原理就是小学乘法，竖式计算，但不需要每次都计算进位，可以统一计算解决Tips…","timeToRead":1,"frontmatter":{"title":"Big Number Multiply","tags":["中文","algorithm","math","string"],"cover":"","date":"2019/10/22"}}},{"node":{"fields":{"slug":"/algorithm/regular-expression-matching","date":"2019-10-05T04:00:00.000Z"},"excerpt":"Regular Expression Matching问题用包含*和.这两个正则符号的正则表达式来匹配字符串解决思路：贪心匹配+回溯，这里如果不采用贪心的方法也是可以AC…","timeToRead":1,"frontmatter":{"title":"Regular Expression Matching","tags":["中文","algorithm","string"],"cover":"","date":"2019/10/5"}}},{"node":{"fields":{"slug":"/algorithm/longest-palindrome-substring","date":"2019-03-04T05:00:00.000Z"},"excerpt":"问题求最长回文子串思路如果考虑O(n)的动态规划，比如用f(i)来代表以当前位置为结尾的回文子串的最大长度，会遇到一个问题，就是说f(i)不仅仅取决于f(i-1)，有可能取决于i-1位置上回文子串的次最大长度等等。比如这个字符串 bananas，下标i从0开始的话，f(3)=…","timeToRead":2,"frontmatter":{"title":"Longest Palindrome Substring","tags":["中文","algorithm","string"],"cover":"","date":"2019/3/4"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"tag":"string"}}