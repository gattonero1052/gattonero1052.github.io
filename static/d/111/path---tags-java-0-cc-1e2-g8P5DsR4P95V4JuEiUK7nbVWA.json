{"data":{"allMarkdownRemark":{"totalCount":3,"edges":[{"node":{"fields":{"slug":"/Java/java-multi-thread-synchronize","date":"2019-10-04T04:00:00.000Z"},"excerpt":"…","timeToRead":1,"frontmatter":{"title":"Java Multi Thread Synchronize","tags":["中文","Java","multi thread","synchronize"],"cover":"","date":"2019/10/4"}}},{"node":{"fields":{"slug":"/Java/java-multi-thread-basic","date":"2019-07-07T04:00:00.000Z"},"excerpt":"JMM（Java内存模型）Java内存模型是一种逻辑模型，是一组预定规范，定义了每个变量的访问方式，简要运行方式如下Java内存区域，描述了Java内存的物理分布Java内存区域JMM分为主内存和工作内存（栈空间），JVM会为每一个线程分配一个工作内存，Java…","timeToRead":3,"frontmatter":{"title":"Java Multi Thread Basic","tags":["中文","Java","multi thread","basic"],"cover":"","date":"2019/7/7"}}},{"node":{"fields":{"slug":"/Java/java-multi-thread-utils","date":"2019-07-07T04:00:00.000Z"},"excerpt":"notify waitwait()、notify()和notifyAll()是Object类中的native final方法（除重载），这两个方法是为了解决多线程环境下的竞态环境，必须在同步方法块内调用notify,notifyAll…","timeToRead":10,"frontmatter":{"title":"Java Multi Thread Utils","tags":["中文","Java","multi thread","java util","jdk"],"cover":"https://unsplash.it/1152/300/?random?SuperLong","date":"2019/07/07"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"tag":"Java"}}