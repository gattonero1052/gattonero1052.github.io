{"componentChunkName":"component---src-templates-post-jsx","path":"/Game/poker-game","result":{"data":{"markdownRemark":{"html":"<h3 id=\"一个web扑克游戏--用不着机器学习也能解决这个问题\" style=\"position:relative;\"><a href=\"#%E4%B8%80%E4%B8%AAweb%E6%89%91%E5%85%8B%E6%B8%B8%E6%88%8F--%E7%94%A8%E4%B8%8D%E7%9D%80%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%9F%E8%83%BD%E8%A7%A3%E5%86%B3%E8%BF%99%E4%B8%AA%E9%97%AE%E9%A2%98\" aria-label=\"一个web扑克游戏  用不着机器学习也能解决这个问题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一个Web扑克游戏 —— 用不着机器学习也能解决这个问题</h3>\n<blockquote>\n<p>A poker game based on browser, only using basic algorithms</p>\n</blockquote>\n<h3 id=\"游戏地址\" style=\"position:relative;\"><a href=\"#%E6%B8%B8%E6%88%8F%E5%9C%B0%E5%9D%80\" aria-label=\"游戏地址 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>游戏地址</h3>\n<p><a href=\"https://mskf.work/poker\">游戏地址</a></p>\n<h3 id=\"概要\" style=\"position:relative;\"><a href=\"#%E6%A6%82%E8%A6%81\" aria-label=\"概要 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>概要</h3>\n<p>这里我主要用中文来讲述poker game的完成细节，一些注意点和坑，以及单人web项目开发过程中的体会</p>\n<blockquote>\n<p>I'll mainly express in Chinese, including details, not-to-dos and how should I develop small projects.</p>\n</blockquote>\n<h3 id=\"技术栈\" style=\"position:relative;\"><a href=\"#%E6%8A%80%E6%9C%AF%E6%A0%88\" aria-label=\"技术栈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>技术栈</h3>\n<ul>\n<li>Javascript (ES6, Lodash, WebWorker)</li>\n<li>React</li>\n<li>GatsbyJS</li>\n</ul>\n<h4 id=\"起因\" style=\"position:relative;\"><a href=\"#%E8%B5%B7%E5%9B%A0\" aria-label=\"起因 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>起因</h4>\n<p>偶然一个论坛的帖子，讨论扑克牌残局。事实上我以前也经常看这类帖子，包括下面引发的一众讨论，但其实很多残局用穷举的方法就能知道获胜方法，让某些讨论完全可以用程序来替代。</p>\n<blockquote>\n<p>I've read some posts on BBS discussing poker matches, in fact, some are not quite meaningful because a simple program could do it all.</p>\n</blockquote>\n<h4 id=\"思路\" style=\"position:relative;\"><a href=\"#%E6%80%9D%E8%B7%AF\" aria-label=\"思路 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思路</h4>\n<p>事实上这个思路很简单，用不着多高深的算法，首先枚举所有对局情况，生成决策树。再把结果从底至上保存</p>\n<blockquote>\n<p>The idea is to enumerate all the possible choices and generate a decision tree. Then save the results from bottom to top.</p>\n</blockquote>\n<h4 id=\"实现过程\" style=\"position:relative;\"><a href=\"#%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B\" aria-label=\"实现过程 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实现过程</h4>\n<ul>\n<li>\n<p>写一个决策树生成算法，输入是开始的对局情况和先后手，其中还包括计算所有可能出牌方式的算法，这里使用了loadsh库来简化部分计算</p>\n<blockquote>\n<p>An algorithm to get a decision tree, params are cards and isFirst flag</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">getDecisionTree(cardsA, cardsB, isAfirst)</code></pre></div>\n</li>\n<li>\n<p>在Gatsby中引入这个算法，并组件化构建相关的页面</p>\n<blockquote>\n<p>import this algorithm in gatsby and build related components</p>\n</blockquote>\n</li>\n<li>\n<p>构建的过程中发现，如果完全使用React Hooks来写逻辑，会变得非常复杂。因为对于游戏而言，组件间的交互是非常重的，所以最后删除了几乎所有Component的Hook，使用一个全局变量来保存所有游戏数据，这样也方便使用本地存储进行自动保存</p>\n<blockquote>\n<p>I discovered that there will be heavy interaction between components while using hooks, so I use a \"global variable\" instead.</p>\n</blockquote>\n</li>\n<li>\n<p>通过一个状态机(DFA)使用该全局变量，当然也可以用Redux的概念去理解，即每个处理action的函数， 接受一个action和相关的参数，找到当前的游戏状态，然后去执行相应的操作，返回新的状态</p>\n<blockquote>\n<p>This global variable works with a DFA，or you can understand it using concepts from Redux, like there is a function which receives an action and some parameters, and then, get the new state from previous state.</p>\n</blockquote>\n</li>\n<li>\n<p>最后定义一系列的游戏状态，和相关的参数，我发现确实可以用一个比较复杂的状态机来描述整个游戏过程。唯一美中不足的是，游戏需要暂停，也就是说停止响应任何除了接触暂停操作之外的动作，那么这时候需要写一个额外的逻辑。</p>\n<blockquote>\n<p>Finally, I defined several game states and found my DFA did perfectly implement the game except for some extra logic handling the pause-resume action.</p>\n</blockquote>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//definition</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">act</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">prevState<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">,</span> forced</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevState<span class=\"token punctuation\">.</span>paused <span class=\"token operator\">&amp;&amp;</span> action<span class=\"token operator\">!=</span><span class=\"token constant\">ACTION</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RESUME</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> prevState\n    <span class=\"token operator\">...</span>\n    <span class=\"token keyword\">return</span> newState\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//usage</span>\nstate <span class=\"token operator\">=</span> <span class=\"token function\">act</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token constant\">ACTION</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DO_SOME_THING</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p>对于游戏来说UI很重要，但我直接凭多年看卢姥爷直播录像的经验画了，吐槽一下，用CSS画界面真的非常复杂而且耗时，因为一开始想的是组件式的开发，后来就没改，如果重来的话我会用canvas</p>\n<blockquote>\n<p>UI is important for a game, but I just draw it according to my personal experience. It was an exhausting work and if I can redo it, I will use canvas.</p>\n</blockquote>\n</li>\n<li>\n<p>开发的过程中我发现，使用一整个DFA来定义游戏状态真的是非常方便的做法，方便增删功能，也几乎不用与展示层做任何交互</p>\n<blockquote>\n<p>It's really convenient to use a whole DFA to define game state if you want to add or delete some features without changing components for present. </p>\n</blockquote>\n</li>\n<li>\n<p>最后，我使用了<a href=\"https://github.com/gatsbyjs/gatsby/issues/12095\">workerize-loader</a>来实现异步计算的功能，毕竟JS是单线程的，在WebWorker技术出现之前这种重计算的场景简直是天方异谈，重则浏览器奔溃，轻则网站卡死，感谢WebWorker！</p>\n<blockquote>\n<p>At last, I used workerize-loader to add support for asynchronized computing, thanks for webworker!</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"单人项目开发的经验和思考chinese-only\" style=\"position:relative;\"><a href=\"#%E5%8D%95%E4%BA%BA%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%9A%84%E7%BB%8F%E9%AA%8C%E5%92%8C%E6%80%9D%E8%80%83chinese-only\" aria-label=\"单人项目开发的经验和思考chinese only permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>单人项目开发的经验和思考(Chinese Only)</h3>\n<p>首先从一个想法到想法的完全实现用了接近一个月的时间，当然这里的实际编码时间只有10天左右（估计每天5小时左右）。主要的瓶颈在于首先这是个临时起意的想法，也就是我之前从来没有接触过任何相关或类似的项目，那么就很有可能出现进行到一半需要重构整个项目的情况，事实上的确，当我发现用另一种办法（使用全局游戏变量）可以加快开发时，我果断重构了整个项目。次要的瓶颈在于UI，事实上，用CSS画UI的功夫足够我写十个算法了，还是使用canvas比较自由和方便。</p>\n<p>解决了这两个问题，我相信项目的进度会大大加快，因为纯粹的技术问题通过stackoverflow或者google，几乎不会超过10分钟就可以得到解决。</p>\n<p>所以，今后的web个人项目，我会做的是：</p>\n<ul>\n<li>判断是否有已知的类似项目，直接找到自己做过或者他人做过的类似项目，在此基础上进行修改，而并不是自己从头开始，即使是有相关的框架</li>\n<li>除了UI以外的算法层面自己实现，UI使用基于某种游戏框架的库，加快开发时间，减少在适配和美工等方面浪费的时间</li>\n</ul>\n<p>另外，考虑到Chrome即将取消对Flash的支持，某些轻量级的游戏，实际上就失去了生存的空间，使用一些基于Html5的游戏框架（甚至不需要复杂的引擎，只需要UI库的支持），加上PWA，有没有可能快速完成一些好玩有趣又轻松的游戏呢？</p>\n<h3 id=\"可能需要完善的地方\" style=\"position:relative;\"><a href=\"#%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81%E5%AE%8C%E5%96%84%E7%9A%84%E5%9C%B0%E6%96%B9\" aria-label=\"可能需要完善的地方 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>可能需要完善的地方</h3>\n<ul>\n<li>在需要的地方加上帮助</li>\n<li>提供一些默认的经典残局</li>\n<li>把默认的alert换成其他更友好的提示</li>\n<li>其他的欢迎来<a href=\"https://github.com/gattonero1052/pokerweb\">github</a>提<a href=\"https://github.com/gattonero1052/pokerweb/issues/new\">issue</a></li>\n</ul>","timeToRead":6,"excerpt":"一个Web扑克游戏 —— 用不着机器学习也能解决这个问题 A poker game based on browser, only using basic algorithms 游戏地址 游戏地址 概要 这里我主要用中文来讲述poker game…","frontmatter":{"title":"Poker Game","cover":"","date":"2019/12/22","category":"Game","tags":["中文","Game","Javascript","React","PWA","WebGame"]},"fields":{"slug":"/Game/poker-game","date":"2019-12-22T05:00:00.000Z"}}},"pageContext":{"slug":"/Game/poker-game","nexttitle":"","nextslug":"","prevtitle":"Bash Scripting Examples","prevslug":"/Bash/bash-scripting-examples"}},"staticQueryHashes":[]}