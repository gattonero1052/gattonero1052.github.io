{
    "componentChunkName": "component---src-templates-post-jsx",
    "path": "/algorithm/reaching-points",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Reaching Points\",\n  \"cover\": \"\",\n  \"category\": \"algorithm\",\n  \"date\": \"2019/10/20\",\n  \"abstract\": \"如果给出一个点 (x,y)，可以选择下一个点的坐标 (x+y,y)，或者(x,x+y)，那么，给出一个起点 (sx,sy)，和终点(tx,ty)，能否通过这样的变化，从起点到达终点\",\n  \"tags\": [\"中文\", \"algorithm\", \"dynamic-programming\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://leetcode.com/articles/reaching-points/\"\n  }, \"Reaching Points\")), mdx(\"h3\", {\n    \"id\": \"问题\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#%E9%97%AE%E9%A2%98\",\n    \"aria-label\": \"问题 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u95EE\\u9898\"), mdx(\"p\", null, \"\\u5982\\u679C\\u7ED9\\u51FA\\u4E00\\u4E2A\\u70B9 (x,y)\\uFF0C\\u53EF\\u4EE5\\u9009\\u62E9\\u4E0B\\u4E00\\u4E2A\\u70B9\\u7684\\u5750\\u6807 (x+y,y)\\uFF0C\\u6216\\u8005(x,x+y)\\uFF0C\\u90A3\\u4E48\\uFF0C\\u7ED9\\u51FA\\u4E00\\u4E2A\\u8D77\\u70B9 (sx,sy)\\uFF0C\\u548C\\u7EC8\\u70B9(tx,ty)\\uFF0C\\u80FD\\u5426\\u901A\\u8FC7\\u8FD9\\u6837\\u7684\\u53D8\\u5316\\uFF0C\\u4ECE\\u8D77\\u70B9\\u5230\\u8FBE\\u7EC8\\u70B9\"), mdx(\"h3\", {\n    \"id\": \"解决方案\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\",\n    \"aria-label\": \"解决方案 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u89E3\\u51B3\\u65B9\\u6848\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u9009\\u62E9\\u6700\\u5FEB\\u7684\\u89E3\\u51B3\\u65B9\\u6848\\uFF1A\\u8FD9\\u91CC\\u770B\\u4E0A\\u53BB\\u662F\\u4E2A\\u6B63\\u5411dp\\u95EE\\u9898\\uFF0C\\u5176\\u5B9E\\u4E0D\\u7136\\uFF0C\\u56E0\\u4E3A\\u6BCF\\u4E00\\u6B65\\u7684\\u7ED3\\u679C\\u90FD\\u8981\\u4F9D\\u8D56\\u4E8E\\u4E0A\\u4E00\\u6B65\\u7684\\u7ED3\\u679C\\uFF0C\\u6240\\u4EE5dp\\u95EE\\u9898\\u4F1A\\u5F52\\u7ED3\\u5230\\u65F6\\u95F4\\u590D\\u6742\\u5EA6O(tx*ty)\\u7684\\u9012\\u5F52\\uFF0C\\u663E\\u7136\\u662F\\u4E0D\\u53EF\\u53D6\\u7684\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u8FD9\\u91CC\\u6211\\u4EEC\\u91C7\\u53D6\\u5012\\u63A8\\u7684\\u65B9\\u5F0F\\uFF0C\\u56E0\\u4E3A\\u663E\\u7136\\uFF0C\\u5982\\u679C\\u5F53\\u524D\\u6B65\\u9AA4\\u7684\\u7ED3\\u679C\\u662F(x,y)(x>y)\\uFF0C\\u90A3\\u4E48\\u4E0A\\u4E00\\u6B65\\u7684\\u7ED3\\u679C\\u4E00\\u5B9A\\u662F(x-y,y)\\uFF0C\\u8FD9\\u6837\\u7684\\u8BDD\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u8FDB\\u4E00\\u6B65\\u7B80\\u5316\\uFF0C\\u5373(x%y+ny,y)\\u90FD\\u662F\\u5012\\u63A8\\u83B7\\u5F97\\u7684\\u8303\\u56F4\\uFF0C\\u8FD9\\u6837\\u7684\\u8BDD\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\u5C31\\u88AB\\u964D\\u4F4E\\u5230\\u4E86\\u5BF9\\u6570\\u7EA7\\u522B\\uFF0C\\u95EE\\u9898\\u4E5F\\u5C31\\u8FCE\\u5203\\u800C\\u89E3\\u4E86\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u603B\\u7ED3\\u4E00\\u4E0B\\uFF0C\\u8FD9\\u5176\\u5B9E\\u662F\\u4E00\\u79CD\\u9006\\u5411dp\\u7684\\u601D\\u8DEF\")));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":1,"excerpt":"Reaching Points 问题 如果给出一个点 (x,y)，可以选择下一个点的坐标 (x+y,y)，或者(x,x+y)，那么，给出一个起点 (sx,sy)，和终点(tx,ty)，能否通过这样的变化，从起点到达终点 解决方案 选择最快的解决方案：这里看上去是个正向dp…","frontmatter":{"title":"Reaching Points","cover":"","date":"2019/10/20","category":"algorithm","tags":["中文","algorithm","dynamic-programming"]},"fields":{"slug":"/algorithm/reaching-points","date":"2019-10-20T04:00:00.000Z"}}},"pageContext":{"slug":"/algorithm/reaching-points","nexttitle":"","nextslug":"","prevtitle":"Combinations and Permutations","prevslug":"/algorithm/combinations-and-permutations"}},
    "staticQueryHashes": []}