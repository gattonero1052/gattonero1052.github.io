{
    "componentChunkName": "component---src-templates-post-jsx",
    "path": "/algorithm/regular-expression-matching",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Regular Expression Matching\",\n  \"cover\": \"\",\n  \"category\": \"algorithm\",\n  \"date\": \"2019/10/5\",\n  \"abstract\": \"Regular Expression Matching using * or .\",\n  \"tags\": [\"中文\", \"algorithm\", \"string\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://leetcode.com/articles/regular-expression-matching/\"\n  }, \"Regular Expression Matching\")), mdx(\"h3\", {\n    \"id\": \"问题\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#%E9%97%AE%E9%A2%98\",\n    \"aria-label\": \"问题 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u95EE\\u9898\"), mdx(\"p\", null, \"\\u7528\\u5305\\u542B*\\u548C.\\u8FD9\\u4E24\\u4E2A\\u6B63\\u5219\\u7B26\\u53F7\\u7684\\u6B63\\u5219\\u8868\\u8FBE\\u5F0F\\u6765\\u5339\\u914D\\u5B57\\u7B26\\u4E32\"), mdx(\"h3\", {\n    \"id\": \"解决\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#%E8%A7%A3%E5%86%B3\",\n    \"aria-label\": \"解决 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u89E3\\u51B3\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u601D\\u8DEF\\uFF1A\\u8D2A\\u5FC3\\u5339\\u914D+\\u56DE\\u6EAF\\uFF0C\\u8FD9\\u91CC\\u5982\\u679C\\u4E0D\\u91C7\\u7528\\u8D2A\\u5FC3\\u7684\\u65B9\\u6CD5\\u4E5F\\u662F\\u53EF\\u4EE5AC\\u6389\\u7684\\uFF0C\\u53EA\\u662F\\u8003\\u8651\\u5230\\u5927\\u90E8\\u5206\\u60C5\\u51B5\\u4E0B\\u6808\\u6DF1\\u7684\\u95EE\\u9898\")), mdx(\"p\", null, \"\\u8FD9\\u91CC\\u5C31\\u662F\\u975E\\u8D2A\\u5FC3\\u7684\\u5339\\u914D\\u65B9\\u5F0F\\uFF0C\\u4EE3\\u7801\\u91CF\\u5F88\\u5C11\\uFF0C\\u6BCF\\u6B21\\u53EA\\u5339\\u914D\\u5F00\\u5934\\u7684\\u5B57\\u7B26\\uFF0C\\u5269\\u4F59\\u7ED3\\u679C\\u7531\\u56DE\\u6EAF\\u8FC7\\u7A0B\\u5F97\\u5230\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"class Solution {\\n    public boolean isMatch(String text, String pattern) {\\n        if (pattern.isEmpty()) return text.isEmpty();\\n        boolean first_match = (!text.isEmpty() && \\n                               (pattern.charAt(0) == text.charAt(0) || pattern.charAt(0) == '.'));\\n        \\n        if (pattern.length() >= 2 && pattern.charAt(1) == '*'){\\n            return (isMatch(text, pattern.substring(2)) ||  //\\u8FD9\\u91CC\\u7684 || \\u4EE3\\u8868\\u56DE\\u6EAF\\u8FC7\\u7A0B\\n                    (first_match && isMatch(text.substring(1), pattern)));\\n        } else {\\n            return first_match && isMatch(text.substring(1), pattern.substring(1));\\n        }\\n    }\\n}\\n\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u601D\\u8DEF\\uFF1A\\u53CD\\u5411dp\\uFF0C\\u8FD9\\u91CC\\u6211\\u4EEC\\u5982\\u679C\\u7528dp\\u7684\\u601D\\u60F3\\uFF0C\\u90A3\\u4E48dp\", \"[i][j]\", \"\\u8868\\u793A\\u7684\\u662Ftext\", \"[i:]\", \"\\u548Cpattern\", \"[j:]\", \"\\u662F\\u5426\\u5339\\u914D\\uFF0C\\u6C42\\u7684\\u5176\\u5B9E\\u662Fdp\", \"[0][0]\", \"\\uFF0C\\u6240\\u4EE5\\u662F\\u4E00\\u79CD\\u53CD\\u5411\\u7684dp\\uFF0C\\u9898\\u76EE\\u4E2D\\u65E0\\u8BBA\\u662F\\u81EA\\u5E95\\u5411\\u4E0A\\u7684\\u65B9\\u6CD5\\u8FD8\\u662F\\u4ECE\\u9876\\u5F80\\u4E0B\\u7684\\u65B9\\u6CD5\\uFF0C\\u5176\\u8BA1\\u7B97\\u987A\\u5E8F\\u5176\\u5B9E\\u90FD\\u662F\\u53CD\\u5411\\u7684\\uFF08\\u6700\\u540E\\u5F97\\u5230\\u7684\\u7ED3\\u679C\\u90FD\\u662Fdp\", \"[0][0]\", \"\\uFF09\\uFF0C\\u8FD9\\u91CC\\u81EA\\u5E95\\u5411\\u4E0A\\u7684\\u65B9\\u6CD5\\u4E2D\\uFF0CResult\\u679A\\u4E3E\\u7684\\u610F\\u4E49\\u5176\\u5B9E\\u53EA\\u662F\\u5C01\\u88C5\\u4E86\\u4E00\\u4E2A\\u5E03\\u5C14\\u503C\\uFF0C\\u76F8\\u5F53\\u4E8E\\u4E00\\u4E2A\\u5E03\\u5C14\\u5C01\\u88C5\\u7C7B\\u578B\\u7684\\u6570\\u7EC4\")), mdx(\"h3\", {\n    \"id\": \"tips\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#tips\",\n    \"aria-label\": \"tips permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Tips\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"str.substring(n) \\u53EF\\u4EE5\\u7406\\u89E3\\u6210\\u53BB\\u6389\\u5B57\\u7B26\\u4E32\\u524D n \\u4E2A\\u5B57\\u6BCD\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"wildcard \\u662F\\u901A\\u914D\\u7B26\\u7684\\u610F\\u601D\\uFF0C\\u4E0D\\u6B62\\u5728\\u6B63\\u5219\\u8868\\u8FBE\\u5F0F\\u4E2D\\u6709\\u901A\\u914D\\u7B26\\uFF0C\\u5F88\\u591A\\u5730\\u65B9\\u6BD4\\u5982\\u5730\\u5740\\u5339\\u914D\\uFF0Cjava\\u4E2D\\u6CDB\\u578B\\u4E2D\\u90FD\\u6709\\u901A\\u914D\\u7B26\")));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":1,"excerpt":"Regular Expression Matching 问题 用包含*和.这两个正则符号的正则表达式来匹配字符串 解决 思路：贪心匹配+回溯，这里如果不采用贪心的方法也是可以AC…","frontmatter":{"title":"Regular Expression Matching","cover":"","date":"2019/10/5","category":"algorithm","tags":["中文","algorithm","string"]},"fields":{"slug":"/algorithm/regular-expression-matching","date":"2019-10-05T04:00:00.000Z"}}},"pageContext":{"slug":"/algorithm/regular-expression-matching","nexttitle":"","nextslug":"","prevtitle":"Max Chunks To Make Sorted II","prevslug":"/algorithm/max-chunks-to-make-sorted-ii"}},
    "staticQueryHashes": []}