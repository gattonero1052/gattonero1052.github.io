{"version":3,"sources":["webpack:///./src/templates/tag.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/layout/index.jsx","webpack:///./src/components/Tags/Tags.jsx","webpack:///./src/components/Tree/treehelper.js","webpack:///./src/components/Data/constants.js","webpack:///./src/components/Data/localstorage.js","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["TagTemplate","render","tag","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_4__","React","Component","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","themeColor","backgroundColor","replace","substr","slice","module","exports","MainLayout","children","name","content","TAGS_OUTSIDE","COLORS","getColor","str","sum","i","length","charCodeAt","PostListTag","_ref","draggable","refresh","tags","clickCb","removeTagCb","tagItemClass","click","remover","onClick","color","key","style","Object","assign","_useDrag","useDrag","item","type","end","monitor","dropResult","getDropResult","addChild","node","collect","isDragging","drag","opacity","ref","PostListTags","_ref2","_ref2$tags","map","Node","value","id","Math","random","toString","parent","isTemp","isFake","child","level","push","getRoot","findRoot","firsrOrderTraverseConsumer","consumer","prev","firsrOrderTraverseFind","res","getTreeArray","maxDepth","n","_spaceCount","recursiveAddCount","root","S","tmp","depth","nodes","cur","splice","childCount","_needToAdd","fakeNode","finalDepth","getLines","_domObject","start","getClientRects","x","left","width","y","top","height","concat","generate","settings","filteringTags","isBrowser","hasWindow","getTree","window","localStorage","getItem","JSON","parse","setTree","cloneDeep_default","filter","stringify","setItem","getBlogSetting","setBlogSetting","DEFAULT_SETTING","PostListing","dispatch","refreshBinder","postList","forEach","postEdge","rawMarkdownBody","paras","match","path","fields","slug","frontmatter","cover","date","excerpt","timeToRead","abstract","p","trim","join","_useState","useState","updateFilter","addTagFilter","lodash_indexOf__WEBPACK_IMPORTED_MODULE_3___default","refreshArticleList","useEffect","post","lodash_intersection__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_4___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","_Tags_Tags__WEBPACK_IMPORTED_MODULE_6__","bind"],"mappings":"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","file":"component---src-templates-tag-jsx-05c0c3bbfca0683113b9.js","sourcesContent":["import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport PostListing from \"../components/PostListing/PostListing\";\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nexport default class TagTemplate extends React.Component {\r\n  render() {\r\n    const { tag } = this.props.pageContext;\r\n    const postEdges = this.props.data.allMarkdownRemark.edges;\r\n    return (\r\n      <Layout>\r\n        <div className=\"tag-container\">\r\n          <Helmet title={`Posts tagged as \"${tag}\" | ${config.siteTitle}`} />\r\n          <PostListing postEdges={postEdges} />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query TagPage($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [fields___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","const config = {\r\n  siteTitle: \"MSKf's Tree BLOG\", // Site <title>.\r\n  siteTitleShort: \"MSKf's Tree\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\r\n  siteTitleAlt: \"MSKF TREE BLOG\", // Alternative site title for SEO.\r\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\r\n  siteUrl: \"https://mskf.work\", // Domain of your website without pathPrefix.\r\n  pathPrefix: \"\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\r\n  siteDescription: \"\", // Website description used for RSS feeds/meta description tag.\r\n  siteRss: \"/rss.xml\", // Path to the RSS file.\r\n  siteFBAppID: \"1825356251115265\", // FB Application ID for using app insights\r\n  googleAnalyticsID: \"UA-47311644-5\", // GA tracking ID.\r\n  disqusShortname: \"mskf-work\", // Disqus shortname.\r\n  postDefaultCategoryID: \"Tech\", // Default category for posts. For Disqus\r\n  dateFromFormat: \"YYYY/MM/DD\", // Date format used in the frontmatter.\r\n  dateFormat: \"MM/DD/YYYY\", // Date format for display.\r\n  userName: \"mskf\", // Username to display in the author segment.\r\n  userEmail: \"gattonero1052@example.com\", // Email used for RSS feed's author segment\r\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\r\n  userLocation: \"North Pole, Earth\", // User location to display in the author segment.\r\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\r\n  userDescription:\r\n    \"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\", // User description to display in the author segment.\r\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\r\n  userLinks: [\r\n    {\r\n      label: \"GitHub\",\r\n      url: \"https://github.com/Vagr9K/gatsby-advanced-starter\",\r\n      iconClassName: \"fa fa-github\"\r\n    },\r\n    {\r\n      label: \"Twitter\",\r\n      url: \"https://twitter.com/Vagr9K\",\r\n      iconClassName: \"fa fa-twitter\"\r\n    },\r\n    {\r\n      label: \"Email\",\r\n      url: \"mailto:vagr9k@gmail.com\",\r\n      iconClassName: \"fa fa-envelope\"\r\n    }\r\n  ],\r\n  copyright: \"Copyright © 2019. Advanced User\", // Copyright string for the footer of the website and RSS feed.\r\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\r\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\r\n};\r\n\r\n// Validate\r\n\r\n// Make sure pathPrefix is empty if not needed\r\nif (config.pathPrefix === \"/\") {\r\n  config.pathPrefix = \"\";\r\n} else {\r\n  // Make sure pathPrefix only contains the first forward slash\r\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\r\n}\r\n\r\n// Make sure siteUrl doesn't have an ending forward slash\r\nif (config.siteUrl.substr(-1) === \"/\")\r\n  config.siteUrl = config.siteUrl.slice(0, -1);\r\n\r\n// Make sure siteRss has a starting forward slash\r\nif (config.siteRss && config.siteRss[0] !== \"/\")\r\n  config.siteRss = `/${config.siteRss}`;\r\n\r\nmodule.exports = config;\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport \"./index.css\";\r\n\r\nexport default class MainLayout extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <meta name=\"description\" content={config.siteDescription} />\r\n        </Helmet>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React,{useState} from 'react'\r\nimport {Link} from \"gatsby\";\r\nimport './tags.css'\r\nimport {useDrag} from \"react-dnd\";\r\nimport {addChild} from \"../Tree/treehelper\";\r\nimport _ from \"lodash\";\r\n\r\nconst TAGS_OUTSIDE = '-1'\r\n\r\nconst COLORS = [\r\n  '#478BA2',\r\n  '#DE585D',\r\n  '#E97658',\r\n  '#E2A490',\r\n  '#89D4DB',\r\n]\r\n\r\nconst getColor = (str)=>{\r\n  let sum = 0\r\n  for (let i = 0; i < str.length; i++) {\r\n    sum+=str.charCodeAt(i)\r\n  }\r\n\r\n  return COLORS[sum%COLORS.length]\r\n}\r\n\r\nconst PostListTag = ({draggable,tag,tags,refresh,clickCb,removeTagCb,tagItemClass})=>{\r\n  const click = ()=> {\r\n    if (clickCb) clickCb(tag)\r\n  }\r\n\r\n  const remover = <div className='tag-remove-wrapper' onClick={()=>removeTagCb(tag)}>\r\n    <div className='tag-remove'></div>\r\n  </div>\r\n\r\n  const color = getColor(tag)\r\n\r\n  if(!draggable){\r\n    return (\r\n      <div className='tag-item-wrapper'>\r\n        <div key={tag} onClick={click} className='tag-item'  style={{\r\n          color,...tagItemClass\r\n        }}>\r\n          {tag}\r\n        </div>\r\n        {removeTagCb?remover:''}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const [{isDragging}, drag] = useDrag({\r\n    item: {name: tag, type: TAGS_OUTSIDE},\r\n    end: (item, monitor) => {\r\n      const dropResult = monitor.getDropResult()\r\n      if (item && dropResult) {\r\n        let child = addChild(dropResult.node,tag)\r\n        refresh()\r\n      }\r\n    },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  })\r\n\r\n  const opacity = isDragging ? 0.4 : 1\r\n\r\n  return (\r\n    <div className='tag-item-wrapper'>\r\n      <div ref={drag} key={tag} onClick={click} className='tag-item'  style={{\r\n        opacity, color\r\n      }}>\r\n        {tag}\r\n      </div>\r\n      {removeTagCb?remover:''}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PostListTags =({draggable,tags=[],refresh,clickCb,removeTagCb,tagItemClass})=>{\r\n  const props = {draggable,tags,refresh,clickCb,removeTagCb,tagItemClass}\r\n  return (<div className='tag-list'>\r\n      {tags.map(tag=>{\r\n        return (\r\n        <PostListTag  key={tag} tag={tag} {...props} />\r\n        )})}\r\n    </div>)\r\n}\r\n\r\nexport {getColor}\r\n\r\nexport {PostListTags,TAGS_OUTSIDE}","import {getColor} from \"../Tags/Tags\";\r\n\r\n/**\r\n * No node can have two child nodes sharing the same name\r\n *\r\n * Every node has a unique path from root, so to say, a unique full name\r\n *\r\n * Maximum height of the tree shown in the screen  is constant\r\n *\r\n * Maximum children of a node is constant\r\n *\r\n * Can only add tree nodes within such height\r\n *\r\n * Take the leaf node as a new root, so to add new node in the next level\r\n *\r\n * Search the full name of node to get it  as the root\r\n */\r\nclass Node {\r\n  constructor(value){\r\n    this.id = Math.random().toString().substr(2)\r\n    this.children = []\r\n    this.value = value\r\n    this.parent = null\r\n    this.isTemp = 0\r\n    this.isFake = 0\r\n  }\r\n}\r\n\r\nconst addChild = (node,value)=>{\r\n  let child = new Node(value)\r\n  child.parent = node\r\n  child.level = (node.level|0)+1\r\n  node.children.push(child)\r\n  return child\r\n}\r\n\r\nconst getRoot =  node =>{\r\n  if (node.parent==null) return node\r\n  return findRoot(node.parent)\r\n}\r\n\r\nconst firsrOrderTraverseConsumer = (node, consumer,prev) => {\r\n  if (!node) return\r\n\r\n  consumer(node,prev)\r\n\r\n  for (let i = 0; i < node.children.length; i++) {\r\n    firsrOrderTraverseConsumer(node.children[i], consumer,node)\r\n  }\r\n}\r\n\r\nconst firsrOrderTraverseFind = (node, id) => {\r\n  if (!node) return null\r\n  else if (node.id == id) return node\r\n\r\n  let res = null\r\n\r\n  for (let i = 0; !res && i < node.children.length; i++) {\r\n    res = firsrOrderTraverseFind(node.children[i], id)\r\n  }\r\n\r\n  return res\r\n}\r\n\r\nconst getFakeNode = ()=>{\r\n  const fakeNode = new Node('')\r\n  fakeNode.isFake = 1\r\n  return fakeNode\r\n}\r\n\r\nconst getTreeArray = (node, maxDepth) => {\r\n  //remove space count\r\n  firsrOrderTraverseConsumer(node,n=>n._spaceCount = 0)\r\n\r\n  const recursiveAddCount = (node, root) => {\r\n    while (node != root) {\r\n      node = node.parent\r\n      node._spaceCount = (node._spaceCount || 1) + 1\r\n    }\r\n  }\r\n\r\n  const S = 'SPLITTER'\r\n\r\n  let tmp = [node, S], depth = 0, nodes = [], childCount = 0, root = node\r\n  do {\r\n    while (tmp[0] != S) {\r\n      let cur = tmp.splice(0, 1)[0]\r\n      if (cur.children.length == 0) childCount++\r\n      if(cur._needToAdd)\r\n        recursiveAddCount(cur, root)\r\n      for (let i = 0; i < cur.children.length; i++) {\r\n        if (i>0) cur.children[i]._needToAdd = true\r\n        tmp.push(cur.children[i])\r\n      }\r\n    }\r\n    tmp.push(tmp.splice(0, 1)[0])\r\n    depth++\r\n  } while (depth < maxDepth && tmp.length > 1)\r\n\r\n  let finalDepth = depth\r\n\r\n  depth = 0\r\n\r\n  //把所有不是底层的叶子节点往下复制\r\n  tmp = [node, S]\r\n  do {\r\n    nodes[depth] = []\r\n    while (tmp[0] != S) {\r\n      let cur = tmp.splice(0, 1)[0]\r\n      if ((cur.isFake || cur.children.length == 0) && depth < finalDepth - 1) {\r\n        tmp.push(getFakeNode())\r\n      }\r\n\r\n      nodes[depth].push(cur)\r\n\r\n      cur.level = depth\r\n      if(cur.isFake) continue\r\n\r\n      for (let i = 0; i < cur.children.length; i++) {\r\n        tmp.push(cur.children[i])\r\n      }\r\n    }\r\n    tmp.push(tmp.splice(0, 1)[0])\r\n    depth++\r\n  } while (depth < maxDepth && tmp.length > 1)\r\n\r\n  for (let i = 0; i <= maxDepth - nodes.length; i++) {\r\n    nodes.push([])\r\n  }\r\n\r\n  return nodes\r\n}\r\n\r\nconst getLines = (node)=>{\r\n  if (!node || !node._domObject) return []\r\n\r\n  let start = node._domObject.getClientRects()[0], res = []\r\n\r\n  if (!start || !start.x) return []\r\n\r\n  for (let i = 0; i < node.children.length; i++) {\r\n    if(!node.children[i]._domObject) continue\r\n    let end =  node.children[i]._domObject.getClientRects()[0]\r\n    res.push({\r\n      color:getColor(node.value),\r\n      start:{\r\n        x:start.left+start.width/2,\r\n        y:start.top+start.height/2,\r\n      },\r\n      end:{\r\n        x:end.left+end.width/2,\r\n        y:end.top+end.height/2,\r\n      }\r\n    })\r\n\r\n    res=res.concat(getLines(node.children[i]))\r\n  }\r\n\r\n  return res\r\n}\r\n\r\nconst generate = ()=>{\r\n  let root = new Node('ROOT')\r\n  root.id='root'\r\n  root.level = 0\r\n  return root\r\n}\r\n\r\nconst generateTest = ()=>{\r\n  // let root = new Node(1)\r\n  // let f11 = new Node(2),\r\n  //   f12 = new Node(3),\r\n  //   f21 = new Node(4),\r\n  //   f22 = new Node(5),\r\n  //   f23 = new Node(6),\r\n  //   f24 = new Node(7)\r\n  // root.children.push(f11)\r\n  // root.children.push(f12)\r\n  // f11.parent = root\r\n  // f12.parent = root\r\n  //\r\n  // f11.children.push(f21)\r\n  // f11.children.push(f22)\r\n  // f21.parent = f11\r\n  // f22.parent = f11\r\n  //\r\n  // f12.children.push(f23)\r\n  // f12.children.push(f24)\r\n  // f23.parent = f12\r\n  // f24.parent = f12\r\n\r\n  let root = new Node(1)\r\n  root.id='root'\r\n  let f11 = new Node(2),\r\n    f12 = new Node(3),\r\n    f13 = new Node(4),\r\n    f21 = new Node(5),\r\n    f22 = new Node(6),\r\n    f23 = new Node(7),\r\n    f24 = new Node(8)\r\n  root.children.push(f11)\r\n  root.children.push(f12)\r\n  root.children.push(f13)\r\n  f11.parent = root\r\n  f12.parent = root\r\n  f13.parent = root\r\n\r\n  f11.children.push(f21)\r\n  f12.children.push(f22)\r\n  f21.parent = f11\r\n  f22.parent = f12\r\n\r\n  f13.children.push(f23)\r\n  f13.children.push(f24)\r\n  f23.parent = f13\r\n  f24.parent = f13\r\n  return root\r\n}\r\n\r\nexport {addChild,getRoot,firsrOrderTraverseConsumer,firsrOrderTraverseFind,getTreeArray,generate,getLines}","export const settings = {\r\n  filteringTags:[]\r\n}","import _ from 'lodash'\r\nimport {getRoot,generate,firsrOrderTraverseConsumer} from '../Tree/treehelper'\r\nimport {settings as DEFAULT_SETTING} from './constants'\r\n\r\nconst TREE_NAME = `MSKf's Tree Blog V1.0 TREE`\r\nconst BLOG_NAME = `MSKf's Tree Blog V1.0 BLOG`\r\n\r\nconst isBrowser = ()=>{\r\n  let hasWindow = 1\r\n  try{\r\n    window\r\n  }catch (e) {\r\n    hasWindow = 0\r\n  }\r\n  return !!hasWindow\r\n}\r\n\r\nconst getTree = ()=>{\r\n  if(!isBrowser()) return\r\n\r\n  let str = window.localStorage.getItem(TREE_NAME)\r\n  let root = null\r\n\r\n  if(!str){\r\n    root = generate()\r\n\r\n    setTree(root)\r\n  }else{\r\n    root = JSON.parse(str)\r\n\r\n    //add circle reference\r\n    firsrOrderTraverseConsumer(root,(node,prev)=>{\r\n\r\n      node.parent = prev\r\n\r\n    }\r\n    )\r\n  }\r\n\r\n  return root\r\n}\r\n\r\nconst setTree = node=>{\r\n  if(!isBrowser()) return\r\n\r\n  let root = _.cloneDeep(getRoot(node))\r\n\r\n  //remove circle reference and temp properties\r\n  firsrOrderTraverseConsumer(root,node=>{\r\n    for (let key in node){\r\n      if (key[0]=='_'){\r\n        delete node[key]\r\n      }\r\n    }\r\n\r\n    //remove fake nodes\r\n    node.children = node.children.filter(n=>!n.isFake)\r\n\r\n    node.parent = null\r\n  })\r\n\r\n  let str = JSON.stringify(root)\r\n  window.localStorage.setItem(TREE_NAME,str)\r\n}\r\n\r\n\r\nconst getBlogSetting = (name)=>{\r\n  if(!isBrowser()) return []\r\n\r\n  let str = window.localStorage.getItem(BLOG_NAME)\r\n  let settings = {}\r\n  if(!str){\r\n    settings = setBlogSetting()\r\n  }else{\r\n    settings = JSON.parse(str)\r\n  }\r\n  return settings[name]\r\n}\r\n\r\n//default settings\r\nconst setBlogSetting = (settings = DEFAULT_SETTING)=>{\r\n  if(!isBrowser()) return\r\n\r\n  let str = JSON.stringify(settings)\r\n  window.localStorage.setItem(BLOG_NAME,str)\r\n  return settings\r\n}\r\n\r\nexport {getTree,setTree,getBlogSetting,setBlogSetting}","import React, {useState, useEffect} from \"react\";\r\nimport {Link} from \"gatsby\";\r\nimport {PostListTags} from '../Tags/Tags'\r\nimport {getBlogSetting, setBlogSetting} from '../Data/localstorage'\r\nimport './list.css'\r\nimport _ from 'lodash'\r\n\r\nconst PostListing = ({postEdges,dispatch,refreshBinder}) => {\r\n  let postList = [];\r\n  postEdges.forEach(postEdge => {\r\n    if (!postEdge.node.rawMarkdownBody) return\r\n    let paras = postEdge.node.rawMarkdownBody.match(/(#{1,5} .*[\\n\\r])/g) || []\r\n    postList.push({\r\n      path: postEdge.node.fields.slug,\r\n      tags: postEdge.node.frontmatter.tags || [],\r\n      cover: postEdge.node.frontmatter.cover,\r\n      title: postEdge.node.frontmatter.title,\r\n      date: postEdge.node.fields.date,\r\n      excerpt: postEdge.node.excerpt,\r\n      timeToRead: postEdge.node.timeToRead,\r\n      abstract: postEdge.node.frontmatter.abstract || paras.map(p => p.replace(/^#+/, '').trim()).join('  ')\r\n    });\r\n  });\r\n\r\n\r\n  const [filteringTags, updateFilter] = useState(getBlogSetting('filteringTags'))\r\n\r\n  const addTagFilter = (tag) => {\r\n      let index = _.indexOf(filteringTags, tag)\r\n      if (index == -1) {\r\n        filteringTags.push(tag)\r\n      }\r\n\r\n      refreshArticleList({filteringTags})\r\n\r\n      //refreshTags in tree\r\n      dispatch('refreshTagList',{filteringTags})\r\n    }\r\n\r\n  const refreshArticleList = ({filteringTags})=>{\r\n    setBlogSetting({filteringTags})\r\n    updateFilter([...filteringTags])\r\n  }\r\n\r\n  //bind when component did mount\r\n  useEffect(()=>{\r\n    refreshBinder({refreshArticleList})\r\n  },[])\r\n\r\n  postList = postList.filter(post => _.intersection(post.tags, filteringTags).length==filteringTags.length)\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        postList.map(post => (\r\n          <div className='post-list' key={post.path}>\r\n            <div className='post-left'>\r\n              <div className='post-title'>\r\n                <Link to={post.path} key={post.title}>\r\n                  {post.title}\r\n                </Link>\r\n              </div>\r\n              <div className='post-tags'></div>\r\n              <div className='post-abstract'>{post.abstract}</div>\r\n            </div>\r\n            <div className='post-right'>\r\n              <div className='post-tags'>\r\n                <PostListTags draggable={true} refresh={dispatch.bind(this,'refreshTree')} tags={post.tags} clickCb={addTagFilter}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostListing;\r\n"],"sourceRoot":""}