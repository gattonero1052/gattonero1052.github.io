{"version":3,"sources":["webpack:///./node_modules/lodash/intersection.js","webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./node_modules/lodash/_baseIsNaN.js","webpack:///./node_modules/lodash/isArrayLikeObject.js","webpack:///./node_modules/lodash/_shortOut.js","webpack:///./node_modules/lodash/_strictIndexOf.js","webpack:///./node_modules/lodash/_baseRest.js","webpack:///./node_modules/lodash/_overRest.js","webpack:///./node_modules/lodash/_baseFindIndex.js","webpack:///./node_modules/lodash/_baseIndexOf.js","webpack:///./node_modules/lodash/toInteger.js","webpack:///./node_modules/lodash/_trimmedEndIndex.js","webpack:///./node_modules/lodash/_arrayIncludesWith.js","webpack:///./node_modules/lodash/_castArrayLikeObject.js","webpack:///./node_modules/lodash/toFinite.js","webpack:///./src/templates/category.jsx","webpack:///./node_modules/lodash/constant.js","webpack:///./node_modules/lodash/_apply.js","webpack:///./node_modules/lodash/_baseTrim.js","webpack:///./node_modules/lodash/_arrayIncludes.js","webpack:///./node_modules/lodash/_baseSetToString.js","webpack:///./node_modules/lodash/_baseIntersection.js","webpack:///./node_modules/lodash/toNumber.js","webpack:///./node_modules/lodash/indexOf.js","webpack:///./node_modules/lodash/_setToString.js","webpack:///./node_modules/lodash/identity.js"],"names":["arrayMap","baseIntersection","baseRest","castArrayLikeObject","intersection","arrays","mapped","length","module","exports","PostListing","postEdges","dispatch","refreshBinder","console","log","postList","forEach","postEdge","node","body","push","path","fields","slug","tags","frontmatter","cover","title","date","excerpt","timeToRead","abstract","useState","getBlogSetting","filteringTags","updateFilter","addTagFilter","tag","refreshArticleList","setBlogSetting","useEffect","filter","post","map","className","key","to","draggable","refresh","bind","clickCb","value","isArrayLike","isObjectLike","nativeNow","Date","now","func","count","lastCalled","stamp","remaining","arguments","apply","undefined","array","fromIndex","index","identity","overRest","setToString","start","nativeMax","Math","max","transform","args","Array","otherArgs","this","predicate","fromRight","baseFindIndex","baseIsNaN","strictIndexOf","toFinite","result","remainder","reWhitespace","string","test","charAt","comparator","isArrayLikeObject","toNumber","CategoryTemplate","render","category","props","pageContext","data","allMdx","edges","config","siteTitle","React","Component","thisArg","call","trimmedEndIndex","reTrimStart","slice","replace","baseIndexOf","constant","defineProperty","baseSetToString","SetCache","arrayIncludes","arrayIncludesWith","baseUnary","cacheHas","nativeMin","min","iteratee","includes","othLength","othIndex","caches","maxLength","Infinity","seen","outer","computed","cache","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","toInteger","shortOut"],"mappings":"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","file":"component---src-templates-category-jsx-8d04f3533bca12cebcf5.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n","import React, {useState, useEffect} from \"react\";\r\nimport {Link} from \"gatsby\";\r\nimport {PostListTags} from '../Tags/Tags'\r\nimport {getBlogSetting, setBlogSetting} from '../Data/localstorage'\r\nimport './list.css'\r\nimport _ from 'lodash'\r\n\r\nconst PostListing = ({postEdges,dispatch,refreshBinder}) => {\r\n  console.log(postEdges);\r\n  let postList = [];\r\n  postEdges.forEach(postEdge => {\r\n    if (!postEdge.node.body) return\r\n\r\n    // here markdown is replaced by mdx, so this part of code won't work anymore\r\n    // let paras = postEdge.node.rawMarkdownBody.match(/(#{1,5} .*[\\n\\r])/g) || []\r\n    postList.push({\r\n      path: postEdge.node.fields.slug,\r\n      tags: postEdge.node.frontmatter.tags || [],\r\n      cover: postEdge.node.frontmatter.cover,\r\n      title: postEdge.node.frontmatter.title,\r\n      date: postEdge.node.fields.date,\r\n      excerpt: postEdge.node.excerpt,\r\n      timeToRead: postEdge.node.timeToRead,\r\n      abstract: postEdge.node.frontmatter.abstract,\r\n      // abstract: postEdge.node.frontmatter.abstract || paras.map(p => p.replace(/^#+/, '').trim()).join('  ')\r\n    });\r\n  });\r\n\r\n\r\n  const [filteringTags, updateFilter] = useState(getBlogSetting('filteringTags'))\r\n\r\n  const addTagFilter = (tag) => {\r\n      let index = _.indexOf(filteringTags, tag)\r\n      if (index == -1) {\r\n        filteringTags.push(tag)\r\n      }\r\n\r\n      refreshArticleList({filteringTags})\r\n\r\n      //refreshTags in tree\r\n      dispatch('refreshTagList',{filteringTags})\r\n    }\r\n\r\n  const refreshArticleList = ({filteringTags})=>{\r\n    setBlogSetting({filteringTags})\r\n    updateFilter([...filteringTags])\r\n  }\r\n\r\n  //bind when component did mount\r\n  useEffect(()=>{\r\n    if(refreshBinder) refreshBinder({refreshArticleList})\r\n  },[])\r\n\r\n  postList = postList.filter(post => _.intersection(post.tags, filteringTags).length==filteringTags.length)\r\n  return (\r\n    <div>\r\n      {\r\n        postList.map(post => (\r\n          <div className='post-list' key={post.path}>\r\n            <div className='post-left'>\r\n              <div className='post-title'>\r\n                <Link to={post.path} key={post.title}>\r\n                  {post.title}\r\n                </Link>\r\n              </div>\r\n              <div className='post-tags'></div>\r\n              <div className='post-abstract'>{post.abstract}</div>\r\n            </div>\r\n            <div className='post-right'>\r\n              <div className='post-tags'>\r\n                <PostListTags draggable={true} refresh={dispatch.bind(this,'refreshTree')} tags={post.tags} clickCb={addTagFilter}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostListing;\r\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport PostListing from \"../components/PostListing/PostListing\";\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nexport default class CategoryTemplate extends React.Component {\r\n  render() {\r\n    const { category } = this.props.pageContext;\r\n    const postEdges = this.props.data.allMdx.edges;\r\n    return (\r\n      <Layout>\r\n        <div className=\"category-container\">\r\n          <Helmet\r\n            title={`Posts in category \"${category}\" | ${config.siteTitle}`}\r\n          />\r\n          <PostListing postEdges={postEdges} />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query CategoryPage($category: String) {\r\n    allMdx(\r\n      limit: 1000\r\n      sort: { fields: [fields___date], order: DESC }\r\n      filter: { frontmatter: { category: { eq: $category } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseIndexOf = require('./_baseIndexOf'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nmodule.exports = indexOf;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n"],"sourceRoot":""}